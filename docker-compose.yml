services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: fcg.gameservice.api:latest
    container_name: FCGGameService-api
    restart: unless-stopped
    ports:
      - "5000:8080"   # HTTP
    environment:
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      DOTNET_RUNNING_IN_CONTAINER: "true"
      DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: "false"
      ASPNETCORE_URLS: "http://+:8080"
      ASPNETCORE_HTTP_PORT: 8080
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      MongoDbSettings__ConnectionString: ${MongoDbSettings__ConnectionString}
      MongoDbSettings__DatabaseName: ${MongoDbSettings__DatabaseName}
      ElasticSettings__ApiKey: ${ElasticSettings__ApiKey}
      ElasticSettings__CloudId: ${ElasticSettings__CloudId}
      AzureStorage__ConnectionString: ${AzureStorage__ConnectionString}
      AzureStorage__ProducerQueueName: ${AzureStorage__ProducerQueueName}
      AzureStorage__ConsumerQueueName: ${AzureStorage__ConsumerQueueName}
      OTEL_RESOURCE_ATTRIBUTES: ${OTEL_RESOURCE_ATTRIBUTES}
      OTEL_EXPORTER_OTLP_ENDPOINT: ${OTEL_EXPORTER_OTLP_ENDPOINT}
      OTEL_EXPORTER_OTLP_HEADERS: ${OTEL_EXPORTER_OTLP_HEADERS}
      OTEL_EXPORTER_OTLP_PROTOCOL: ${OTEL_EXPORTER_OTLP_PROTOCOL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health", "||", "curl", "-f", "http://localhost:8080/", "||", "exit", "1"]
      interval: 45s
      timeout: 15s
      retries: 10
      start_period: 90s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - fcg_network

networks:
  fcg_network:
    driver: bridge